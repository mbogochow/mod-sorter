package me.mbogo.modsorter.reader;

import me.mbogo.modsorter.mod.Mod;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;

/**
 * ModFileReader implementation for reading the modlist file generated by
 * Mod Organizer for its profiles.
 *
 * @author Michael Bogochow
 * @version 1.0.0
 * @since June 21, 2014
 */
public class ModListFileReader implements ModFileReader {
    private static final char EnabledChar = '+';
    private static final char DisabledChar = '-';
    private static final char ExternalChar = '*';

    @Override
    public List<Mod> readFile(String fileName) throws FileNotFoundException {
        List<Mod> modList = new LinkedList<>();

        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            // Skip the first line since Mod Organizer leaves a comment on the first
            // line of its me.mbogo.modsorter.mod list file
            br.readLine();

            for (String line = br.readLine(); line != null; line = br.readLine()) {
                Mod mod = new Mod(line.substring(1));
                char firstChar = line.charAt(0);

                if (firstChar == EnabledChar)
                    mod.setEnabled(true);

                else if (firstChar == DisabledChar)
                    mod.setEnabled(false);

                else if (firstChar == ExternalChar)
                    mod.setExternal(true);

                modList.add(mod);
            }
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        return modList;
    } /* readFile */
}
